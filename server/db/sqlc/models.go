// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"time"
)

type Comment struct {
	ID          int64     `json:"id"`
	UserID      string    `json:"user_id"`
	PostID      string    `json:"post_id"`
	Content     string    `json:"content"`
	CommentTime time.Time `json:"comment_time"`
}

type CommentsLike struct {
	CommentID int64  `json:"comment_id"`
	UserID    string `json:"user_id"`
}

type CommentsResponse struct {
	SourceCommentID   int64 `json:"source_comment_id"`
	ResponseCommentID int64 `json:"response_comment_id"`
}

type DiscussionComment struct {
	ID           int64          `json:"id"`
	DiscussionID int64          `json:"discussion_id"`
	UserID       string         `json:"user_id"`
	CreationTime time.Time      `json:"creation_time"`
	Content      sql.NullString `json:"content"`
}

type Follower struct {
	FollowerID   string    `json:"follower_id"`
	FollowedID   string    `json:"followed_id"`
	CreationTime time.Time `json:"creation_time"`
}

type Learning struct {
	UserID   string `json:"user_id"`
	Language string `json:"language"`
}

type Like struct {
	UserID string `json:"user_id"`
	PostID string `json:"post_id"`
}

type Resource struct {
	ID  int64  `json:"id"`
	Url string `json:"url"`
	// 2 chars language code
	Language     string         `json:"language"`
	Difficulty   sql.NullString `json:"difficulty"`
	Title        string         `json:"title"`
	Description  sql.NullString `json:"description"`
	MediaType    sql.NullString `json:"media_type"`
	Category     string         `json:"category"`
	ThumbnailUrl sql.NullString `json:"thumbnail_url"`
	InsertedAt   time.Time      `json:"inserted_at"`
}

type ResourceDiscussion struct {
	ID           int64          `json:"id"`
	CreatorID    string         `json:"creator_id"`
	PostID       string         `json:"post_id"`
	CreationTime time.Time      `json:"creation_time"`
	Title        string         `json:"title"`
	Description  sql.NullString `json:"description"`
}

type StudyList struct {
	ID           int64     `json:"id"`
	UserID       string    `json:"user_id"`
	CreationTime time.Time `json:"creation_time"`
	Title        string    `json:"title"`
	Description  string    `json:"description"`
	Public       bool      `json:"public"`
}

type StudyListResource struct {
	StudyListID int64     `json:"study_list_id"`
	ResourceID  int64     `json:"resource_id"`
	TimeAdded   time.Time `json:"time_added"`
}

type Tag struct {
	PostID string `json:"post_id"`
	Tag    string `json:"tag"`
}

type User struct {
	// use UUID
	ID                string    `json:"id"`
	Username          string    `json:"username"`
	Email             string    `json:"email"`
	HashedPassword    string    `json:"hashed_password"`
	PasswordChangedAt time.Time `json:"password_changed_at"`
	RegistrationDate  time.Time `json:"registration_date"`
	// 2 chars language code
	NativeLanguage string         `json:"native_language"`
	Role           sql.NullString `json:"role"`
}

type UserPost struct {
	// use UUID
	ID              string         `json:"id"`
	UserID          string         `json:"user_id"`
	ResourceID      int64          `json:"resource_id"`
	PostTime        time.Time      `json:"post_time"`
	PostTitle       string         `json:"post_title"`
	PostDescription sql.NullString `json:"post_description"`
}

type Vote struct {
	UserID     string         `json:"user_id"`
	PostID     string         `json:"post_id"`
	Difficulty string         `json:"difficulty"`
	Comment    sql.NullString `json:"comment"`
}
